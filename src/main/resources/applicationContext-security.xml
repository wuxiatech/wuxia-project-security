<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:s="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security   
	http://www.springframework.org/schema/security/spring-security.xsd">

	<!--unSecurity resource config -->
	<s:http pattern="/commons/**" security="none"/>
	<s:http pattern="/**/favicon.ico" security="none"/>
	<s:http pattern="/auth/**" security="none"/>
	<s:http pattern="/api/**" security="none"/>
	<s:http pattern="/resources/**" security="none"/>
	<!-- <s:http pattern="/" security="none" /> -->
	<!-- if 'auto-config = true' then must use 'from-login'.if do use this attribute,then 
		it's default value is 'http-basic'(no have session). access-denied-page:throw 
		error ,rediretor to the page -->
	<s:http entry-point-ref="loginUrlEntryPoint" disable-url-rewriting="true">
		<!-- <s:http-basic /> -->
		<s:headers>
			<!-- 支持同域名iframe请求 -->
			<s:frame-options policy="SAMEORIGIN"/>
		</s:headers>
		<!-- <s:custom-filter before="CONCURRENT_SESSION_FILTER" ref="memcachedSessionFilter" /> -->
		<s:custom-filter position="FORM_LOGIN_FILTER" ref="loginFilter" />
		<s:access-denied-handler error-page="/common/403.jsp" />
		<s:custom-filter position="LOGOUT_FILTER" ref="logoutFilter" />
		<s:custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="securityFilter" />
		<s:custom-filter position="REMEMBER_ME_FILTER" ref="rememberMeFilter" />
		<!-- <s:intercept-url pattern="/" access="ROLE_ANONYMOUS" /> -->
		<s:session-management session-fixation-protection="none" >
			<s:concurrency-control max-sessions="10" error-if-maximum-exceeded="false" />
		</s:session-management>
		<s:session-management
				session-authentication-strategy-ref="currentControllerStrategy"/>
	</s:http>

	<!-- Authentication Start -->
	<s:authentication-manager alias="authenticationManager" erase-credentials="false">
		<s:authentication-provider ref="authenticationProvider">
			<!-- <s:password-encoder ref="MyPasswordEncoder"> <s:salt-source user-property="username"/> 
				</s:password-encoder> -->
		</s:authentication-provider>
		<s:authentication-provider ref="rememberMeAuthenticationProvider">
		</s:authentication-provider>
	</s:authentication-manager>

	<bean id="authenticationProvider"
		class="cn.wuxia.project.security.handler.support.MyAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailsService"></property>
	</bean>
	<bean id="userDetailsService"
		class="cn.wuxia.project.security.handler.support.MyUserDetailsService" />
	<bean id="myPasswordEncoder" class="cn.wuxia.project.security.common.MyPasswordEncoder"></bean>
	<!-- Authentication End -->

	<!-- security access control start -->
	<bean id="securityFilter" class="cn.wuxia.project.security.handler.support.MySecurityFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="securityMetadataSource">
			<bean class="cn.wuxia.project.security.handler.support.MySecurityMetadataSource" >
				<property name="systemType" value="${system.type}"/>
			</bean>
		</property>
		<property name="accessDecisionManager">
			<bean class="cn.wuxia.project.security.handler.support.MyAccessDecisionManager" >
				<property name="messageSourceHandler" ref="messageSourceHandler"/>
			</bean>
		</property>
	</bean>
	<!-- securtiy access control end -->
	
	<!-- start before login -->
	<bean id="loginUrlEntryPoint" class="cn.wuxia.project.security.handler.support.MyLoginUrlEntryPoint">
		<constructor-arg value="${loginFormUrl}"></constructor-arg>
	</bean>
	<!-- end before login -->
	<!-- login filter configuration Start -->
	<bean id="loginFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="rememberMeServices" ref="rememberMeServices" />
		<!-- <property name="sessionStrategy" ref="currentControllerStrategy"/> -->
		<property name="authenticationFailureHandler" ref="loginFailureHandler" />
		<property name="authenticationSuccessHandler" ref="loginSuccessHandler" />
		<property name="filterProcessesUrl" value="${loginProcessUrl}" />
	</bean>

	<bean id="loginFailureHandler"
		class="cn.wuxia.project.security.handler.support.MyLoginFailureHandler">
		<property name="defaultFailureUrl" value="${loginFailureUrl}" />
	</bean>

	<bean id="loginSuccessHandler" class="cn.wuxia.project.security.handler.support.MyLoginSuccessHandler">
		<property name="defaultTargetUrl" value="${loginSuccessUrl}" />
		<property name="targetUrlParameter" value="targetUrl" />
	</bean>
	<!-- login filter configuration End -->

	<!-- logout filter configuration Start -->
	<bean id="logoutFilter"
		class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<constructor-arg ref="logoutSuccessHandler" />
		<constructor-arg>
			<list>
				<ref bean="rememberMeServices" />
				<bean
					class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler">
				</bean>
			</list>
		</constructor-arg>
		<property name="filterProcessesUrl" value="${logouProcessUrl}"></property>
	</bean>
	<bean id="logoutSuccessHandler" class="cn.wuxia.project.security.handler.support.MyLogoutSuccessHandler">
		<property name="logoutSuccessUrl" value="${logoutSuccessUrl}" />
	</bean>
	<!-- logout filter configuration End -->

	<!-- remember me Configuration Start -->
	<bean id="rememberMeFilter"
		class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
		<constructor-arg name="authenticationManager" ref="authenticationManager" />
		<constructor-arg name="rememberMeServices" ref="rememberMeServices" />
	</bean>

	<bean id="rememberMeServices"
		class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
		<constructor-arg name="key" value="paLLwApsifs24THosE62scabWow78PEaCh99Jus" />
		<constructor-arg name="userDetailsService" ref="userDetailsService" />
		<property name="cookieName" value="${rememberMeCookieName}" />
		<property name="alwaysRemember" value="false" />
		<property name="tokenValiditySeconds" value="604800" />
		<property name="parameter" value="${rememberMeProcess}" />
	</bean>

	<bean id="rememberMeAuthenticationProvider"
		class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<constructor-arg name="key" value="paLLwApsifs24THosE62scabWow78PEaCh99Jus" />
	</bean>
	<!-- remember me Configuration End -->

	<!-- Session Configuration Start -->
	<bean id="concurrentSessionFilter"
		class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<constructor-arg name="sessionRegistry" ref="sessionRegistry" />
	</bean>

	<bean
			class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
		<constructor-arg>
			<list>
				<bean
						class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
					<constructor-arg ref="sessionRegistry"/>
				</bean>
				<bean
						class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy"/>
				<bean
						class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
					<constructor-arg ref="sessionRegistry"/>
				</bean>
			</list>
		</constructor-arg>
	</bean>
	<bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />
	<!-- Session Configuration End -->

	<!-- Automatically receives AuthenticationEvent messages -->
	<bean id="loggerListener"
		class="org.springframework.security.authentication.event.LoggerListener" />
</beans> 